@model SisºFut_SistemaOrganizacionalJogosdeFutsal.Models.HomeModel

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

<link rel="stylesheet" href="~/css/Home.css" asp-append-version="true">

<!-- SEÇÃO DE MENSAGENS DE ALERTA -->
@if (TempData["MensagemSucesso"] != null)
{
    <div id="alertSucesso" class="alert alert-success text-center" role="alert">
        @TempData["MensagemSucesso"]
    </div>
}

@if (TempData["MensagemErro"] != null)
{
    <div id="alertErro" class="alert alert-danger text-center" role="alert">
        @TempData["MensagemErro"]
    </div>
}




<!-- CONTAINER PRINCIPAL -->
<div class="main-container">
    <div class="cards-container">
        <!-- TÍTULO DA PÁGINA -->
        <div class="section-title">
            <h1>Jogos Encerrados</h1>
        </div>

        <!-- LISTA DE JOGOS ENCERRADOS -->
        <div class="games-list">
            @if (Model.Encerrados == null || Model.Encerrados.Count == 0)
            {
                <div class="empty-message">
                    <h3>Nenhum Jogo Encerrado Registrado</h3>
                </div>
            }
            else
            {
                foreach (var jogo in Model.Encerrados)
                {
                    <div class="finished-game-card">
                        <!-- CABEÇALHO COM DATA E LOCAL -->
                        <div class="game-header">
                            <span class="game-date">@jogo.Data.ToString("dd/MM/yyyy")</span>
                            <span class="game-location">@jogo.Local</span>
                        </div>

                        <!-- TIMES E PLACAR -->
                        <div class="teams-container">
                            <div class="team-card winner-@(jogo.GolsTime1 > jogo.GolsTime2 ? "true" : "false")">
                                <img src="data:image/;base64,@jogo.FotoTime1" class="team-logo" />
                                <p class="team-name">@jogo.Time1</p>
                                <div class="team-score">@jogo.GolsTime1</div>
                            </div>

                            <div class="vs-badge">
                                <span>VS</span>
                            </div>

                            <div class="team-card winner-@(jogo.GolsTime2 > jogo.GolsTime1 ? "true" : "false")">
                                <img src="data:image/;base64,@jogo.FotoTime2" class="team-logo" />
                                <p class="team-name">@jogo.Time2</p>
                                <div class="team-score">@jogo.GolsTime2</div>
                            </div>
                        </div>

                        <!-- DESCRIÇÃO DO JOGO -->
                        @if (!string.IsNullOrEmpty(jogo.DS_Descrição))
                        {
                            <div class="game-description">
                                <i class="bi bi-info-circle"></i> @jogo.DS_Descrição
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>

<style>
    /* ESTILOS ADICIONAIS PARA JOGOS ENCERRADOS */
    .section-title {
        background-color: #343a40;
        color: white;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
        text-align: center;
    }

    .finished-game-card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        padding: 15px;
        transition: transform 0.3s ease;
    }

        .finished-game-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

    .game-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
        font-size: 0.9rem;
        color: #6c757d;
    }

    .teams-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .team-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        flex: 1;
    }

        .team-card.winner-true {
            font-weight: bold;
            color: #28a745; /* Verde para o vencedor */
        }

    .team-logo {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 8px;
    }

    .team-name {
        margin: 5px 0;
        text-align: center;
    }

    .team-score {
        font-size: 1.5rem;
        font-weight: bold;
        margin-top: 5px;
    }

    .vs-badge {
        background-color: #f8f9fa;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 10px;
        font-weight: bold;
    }

    .game-description {
        padding: 10px;
        background-color: #f8f9fa;
        border-radius: 5px;
        margin-top: 10px;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
    }

        .game-description i {
            margin-right: 8px;
        }

    .empty-message {
        text-align: center;
        padding: 30px;
        color: #6c757d;
    }
</style>

<script>
 

            // Desaparecer automaticamente os alertas
    const alertSucesso = document.getElementById('alertSucesso');
    const alertErro = document.getElementById('alertErro');

    if (alertSucesso) {
        setTimeout(() => {
            alertSucesso.style.transition = "opacity 0.5s ease";
            alertSucesso.style.opacity = "0";
            setTimeout(() => {
                alertSucesso.style.display = "none";
            }, 500);
        }, 8000); // 8 segundos
    }

    if (alertErro) {
        setTimeout(() => {
            alertErro.style.transition = "opacity 0.5s ease";
            alertErro.style.opacity = "0";
            setTimeout(() => {
                alertErro.style.display = "none";
            }, 500);
        }, 15000); // 15 segundos
    }
</script>