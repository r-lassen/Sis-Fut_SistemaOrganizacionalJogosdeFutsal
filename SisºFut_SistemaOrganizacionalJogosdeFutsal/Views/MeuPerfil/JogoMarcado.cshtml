@model AgendamentosModel
<link href="~/css/JogoMarcado.css" rel="stylesheet" asp-append-version="true" />


<!-- SEÇÃO DE MENSAGENS DE ALERTA -->
@if (TempData["MensagemSucesso"] != null)
{
    <div id="alertSucesso" class="alert alert-success text-center" role="alert">
        @TempData["MensagemSucesso"]
    </div>
}

@if (TempData["MensagemErro"] != null)
{
    <div id="alertErro" class="alert alert-danger text-center" role="alert">
        @TempData["MensagemErro"]
    </div>
}


<div class="main-container">

    @{
        var isEditor = Model.Agendar.idTime1 == Model.UsuarioId;
        var title = isEditor ? "Editar Jogo Marcado" : "Jogo Marcado";
    }

    <h1 class="page-title">@title</h1>
    @await Html.PartialAsync("~/Views/Home/ModalPlacar.cshtml")
    <form asp-controller="Home" asp-action="JogoMarcado" method="post">
        <div class="form-container">
            <!-- Times -->
            <div class="row align-items-center mb-4">
                <!-- Time 1 -->
                <div class="col-md-5 mb-3 mb-md-0">
                    <div class="text-center text-md-start mb-2">
                        <img src="data:image/*;base64,@Model.Agendar.FotoTime1"
                             class="rounded-circle img-fluid team-image" />
                    </div>
                    <label class="form-label">Time 1</label>
                    @Html.TextBoxFor(model => model.Agendar.Time1, new { @readonly = "readonly", @class = "form-control" })
                </div>

                <!-- VS no meio -->
                <div class="col-md-2 vs-container">
                    <div class="vs-badge">VS</div>
                </div>

                <!-- Time 2 -->
                <div class="col-md-5">
                    <div class="text-center text-md-start mb-2">
                        <img src="data:image/*;base64,@Model.Agendar.FotoTime2"
                             class="rounded-circle img-fluid team-image" />
                    </div>
                    <label class="form-label">Time 2</label>
                    @Html.TextBoxFor(model => model.Agendar.Time2, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>

            @Html.HiddenFor(model => model.Agendar.idTime1)
            @Html.HiddenFor(model => model.Agendar.id)
            @Html.HiddenFor(model => model.Agendar.idTime2)

            <!-- Data e Hora -->
            <div class="row mb-4">
                <div class="col-md-6 mb-3 mb-md-0">
                    <label class="form-label">Data do Jogo</label>
                    @if (isEditor)
                    {
                        @Html.TextBox("Agendar.Data", Model.Agendar.Data.ToString("yyyy-MM-dd"),
                                 new { @class = "form-control", @type = "date" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.Agendar.Data, Model.Agendar.Data.ToString("dd/MM/yyyy"),
                                 new { @readonly = "readonly", @class = "form-control" })
                    }
                </div>
                <div class="col-md-6">
                    <label class="form-label">Horário</label>
                    @if (isEditor)
                    {
                        @Html.TextBoxFor(model => model.Agendar.Hora,
                                 new { @class = "form-control", @type = "time" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.Agendar.Hora,
                                 new { @readonly = "readonly", @class = "form-control" })
                    }
                </div>
            </div>

            <!-- Local -->
            <div class="row mb-4">
                <div class="col-12">
                    <label class="form-label">Local do Jogo</label>
                    @Html.TextBoxFor(model => model.Agendar.Local,
                             new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>

            <!-- Descrição -->
            <div class="row mb-4">
                <div class="col-12">
                    <label class="form-label">Descrição</label>
                    @if (isEditor)
                    {
                        @Html.TextAreaFor(model => model.Agendar.DS_Descrição,
                                 new { @class = "form-control form-textarea", rows = "5" })
                    }
                    else
                    {
                        @Html.TextAreaFor(model => model.Agendar.DS_Descrição,
                                 new { @readonly = "readonly", @class = "form-control form-textarea", rows = "5" })
                    }
                </div>
            </div>

            <!-- Botões -->
            <div class="btn-group">
                <a class="btn btn-outline" asp-action="Index" asp-controller="MeuPerfil">Voltar</a>
                @if (isEditor)
                {

                    <button type="button"
                            class="btn btn-danger"
                            onclick="abrirModalEncerrar('@Model.Agendar.id', '@Model.Agendar.Time1', '@Model.Agendar.Time2')">
                        Encerrar Jogo
                    </button>

                    <button type="submit" class="btn btn-editar">Editar</button>
                }
            </div>
        </div>
    </form>
</div>

<script>
        // Desaparecer automaticamente os alertas
    const alertSucesso = document.getElementById('alertSucesso');
    const alertErro = document.getElementById('alertErro');

    if (alertSucesso) {
        setTimeout(() => {
            alertSucesso.style.transition = "opacity 0.5s ease";
            alertSucesso.style.opacity = "0";
            setTimeout(() => {
                alertSucesso.style.display = "none";
            }, 500);
        }, 8000); // 8 segundos
    }

    if (alertErro) {
        setTimeout(() => {
            alertErro.style.transition = "opacity 0.5s ease";
            alertErro.style.opacity = "0";
            setTimeout(() => {
                alertErro.style.display = "none";
            }, 500);
        }, 15000); // 15 segundos
    }
</script>