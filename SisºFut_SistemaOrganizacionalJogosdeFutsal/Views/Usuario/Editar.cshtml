@model UsuarioSemSenhaModel
@using SisºFut_SistemaOrganizacionalJogosdeFutsal.Enums

@{
    ViewData["Title"] = "Editar Usuário";
}

<!-- SEÇÃO DE MENSAGENS DE ALERTA -->
@if (TempData["MensagemSucesso"] != null)
{
    <div id="alertSucesso" class="alert alert-success text-center" role="alert">
        @TempData["MensagemSucesso"]
    </div>
}

@if (TempData["MensagemErro"] != null)
{
    <div id="alertErro" class="alert alert-danger text-center" role="alert">
        @TempData["MensagemErro"]
    </div>
}




<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

<link rel="stylesheet" href="~/css/EditarUsuario.css" asp-append-version="true">

<div class="main-container">

    <div class="page-title">
        <h1>Editar Usuário</h1>
    </div>

    <form asp-controller="Usuario" asp-action="Editar" method="post" id="editarForm">
        <div class="form-container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" asp-for="Id" />

            <!-- Nome -->
            <div class="row mb-4">
                <div class="col-12">
                    <label class="form-label required-field">Nome</label>
                    <input type="text" asp-for="Name"
                           class="form-control @(ViewData.ModelState["Name"]?.Errors.Count > 0 ? "is-invalid" : ViewData.ModelState["Name"]?.AttemptedValue != null ? "is-valid" : "")"
                           placeholder="Digite o Nome" required />
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Name)</span>
                </div>
            </div>

            <!-- E-mail -->
            <div class="row mb-4">
                <div class="col-12">
                    <label class="form-label required-field">E-mail</label>
                    <input type="email" asp-for="Email"
                           class="form-control @(ViewData.ModelState["Email"]?.Errors.Count > 0 ? "is-invalid" : ViewData.ModelState["Email"]?.AttemptedValue != null ? "is-valid" : "")"
                           placeholder="Digite o Email" required />
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Email)</span>
                </div>
            </div>

            <!-- Login -->
            <div class="row mb-4">
                <div class="col-12">
                    <label class="form-label required-field">Login</label>
                    <input type="text" asp-for="Login"
                           class="form-control @(ViewData.ModelState["Login"]?.Errors.Count > 0 ? "is-invalid" : ViewData.ModelState["Login"]?.AttemptedValue != null ? "is-valid" : "")"
                           placeholder="Digite o Login" required />
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Login)</span>
                </div>
            </div>

            <!-- Perfil -->
            <div class="row mb-4">
                <div class="col-12">
                    <label class="form-label required-field">Tipo de Perfil</label>
                    @Html.DropDownListFor(model => model.Perfil,
                             new SelectList(Enum.GetValues(typeof(PerfilEnum))),
                             "Selecione",
                             new
                             {
                                 @class = "form-control",
                                 @id = "dropdownPerfil",
                                 @required = "required"
                             })
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Perfil)</span>
                </div>
            </div>

            <!-- Botões -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="btn-group">
                        <a class="btn btn-outline" asp-controller="Usuario" asp-action="Index">Voltar</a>
                        <button type="submit" class="btn btn-salvar">Salvar</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<script>

        // Validação do formulário com TRIM automático
        const form = document.getElementById('editarForm');
        if (form) {
            form.addEventListener('submit', function (event) {
                form.querySelectorAll('input').forEach(input => {
                    const t = input.type;
                    if ((t === 'text' || t === 'email') && input.value) {
                        input.value = input.value.trim();
                    }
                });

                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        }

                // Desaparecer automaticamente os alertas
    const alertSucesso = document.getElementById('alertSucesso');
    const alertErro = document.getElementById('alertErro');

    if (alertSucesso) {
        setTimeout(() => {
            alertSucesso.style.transition = "opacity 0.5s ease";
            alertSucesso.style.opacity = "0";
            setTimeout(() => {
                alertSucesso.style.display = "none";
            }, 500);
        }, 8000); // 8 segundos
    }

    if (alertErro) {
        setTimeout(() => {
            alertErro.style.transition = "opacity 0.5s ease";
            alertErro.style.opacity = "0";
            setTimeout(() => {
                alertErro.style.display = "none";
            }, 500);
        }, 15000); // 15 segundos
    }

</script>

